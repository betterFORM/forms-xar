<?xml version="1.0" encoding="UTF-8"?>
<!-- betterFORM XAR Builder
    - creates Demo and Reference XARs
    - shared resources are placed int the directory /templates -->
<project name="betterFORM XAR Builder" default="build-all" >

    <xmlproperty file="build.properties.xml" semanticAttributes="true" keepRoot="false" description="import build properties"/>


    <!-- Internal build properties -->
    <property name="target.dir" value="target" description="directoy where all artefacts of the build are placed "/>
    <property name="templates.dir" value="${basedir}/templates" description="templates for XAR files, some of them get filtered"/>
    <property name="demo.src.dir" value="${basedir}/xars/demo" description="demo source directory"/>
    <property name="demo.dir" value="${target.dir}/demo" description="demo target directory"/>
    <property name="reference.src.dir" value="${basedir}/xars/reference" description="reference source directory"/>
    <property name="reference.dir" value="${target.dir}/reference" description="reference target directory"/>



    <target name="clean" description="delete target dir">
        <delete dir="${target.dir}"/>
    </target>

    <target name="build-all" description="build all demo and reference XARS">
        <mkdir dir="${target.dir}"/>
        <antcall target="create-demo-xar"/>
        <antcall target="create-reference-xar"/>
    </target>


    <!-- DEMO XAR -->
    <!-- DEMO XAR -->
    <!-- DEMO XAR -->
    <target name="create-demo-xar" depends="prepare-demo-xar" description="create demo.xar">
        <copy todir="${demo.dir}" overwrite="true">
            <fileset dir="${demo.src.dir}"/>
        </copy>
        <zip basedir="${demo.dir}" destfile="${target.dir}/${demo.filename}-${demo.version}.xar"/>
    </target>

    <target name="prepare-demo-xar" description="filter and copy template files into xars">
        <copy todir="${demo.dir}" description="copy all resources but do not(!) filter or overwrite files"
              overwrite="false">
            <fileset dir="${templates.dir}"/>
        </copy>

        <!-- FILTER EXPATH -->
        <filter token="EX_NAME" value="${demo.expath.name}"/>
        <filter token="EX_ABBR" value="${demo.expath.abbrev}"/>
        <filter token="EX_VERS" value="${demo.expath.version}"/>
        <filter token="EX_TITL" value="${demo.expath.title}"/>
        <filter token="EX_SPEC" value="${common.expath.spec}"/>

        <copy description="filter expath-pkg.xml from templates to demo xar"
              file="${templates.dir}/expath-pkg.xml"
              tofile="${demo.dir}/expath-pkg.xml"
              overwrite="true"
              filtering="true">
        </copy>

        <!-- FILTER REPO XML -->
        <filter token="REP_DESC" value="${demo.repo.description}"/>
        <filter token="REP_STATUS" value="${demo.repo.status}"/>
        <filter token="REP_WEB" value="${demo.repo.website}"/>
        <filter token="REP_USER" value="${demo.repo.permissions.user}"/>
        <filter token="REP_PWD" value="${demo.repo.permissions.password}"/>
        <filter token="REP_GROUP" value="${demo.repo.permissions.group}"/>
        <filter token="REP_MODE" value="${demo.repo.permissions.mode}"/>
        <copy description="filter repo.xml from templates to demo xar"
              file="${templates.dir}/repo.xml"
              tofile="${demo.dir}/repo.xml"
              overwrite="true"
              filtering="true">
        </copy>
    </target>


    <!-- REFERENCE XAR -->
    <!-- REFERENCE XAR -->
    <!-- REFERENCE XAR -->
    <target name="create-reference-xar" depends="prepare-reference-xar" description="create reference.xar">
        <copy todir="${reference.dir}" overwrite="true">
            <fileset dir="${reference.src.dir}"/>
        </copy>
        <zip basedir="${reference.dir}" destfile="${target.dir}/${reference.filename}-${reference.version}.xar"/>
    </target>


    <target name="prepare-reference-xar" description="filter and copy template files into xars">
        <copy description="filter all resources but do not(!) overwrite files"
              todir="${reference.dir}"
              overwrite="false">
            <fileset dir="${templates.dir}"/>
        </copy>

        <!-- EXPath Properties -->
        <filter token="EX_NAME" value="${reference.expath.name}"/>
        <filter token="EX_ABBR" value="${reference.expath.abbrev}"/>
        <filter token="EX_VERS" value="${reference.expath.version}"/>
        <filter token="EX_SPEC" value="${common.expath.spec}"/>
        <filter token="EX_TITL" value="${reference.expath.title}"/>
        <copy description="filter expath-pkg.xml from templates to demo xar"
              file="${templates.dir}/expath-pkg.xml"
              tofile="${reference.dir}/expath-pkg.xml"
              overwrite="true"
              filtering="true">
        </copy>

        <!-- FILTER REPO XML -->
        <filter token="REP_DESC" value="${reference.repo.description}"/>
        <filter token="REP_STATUS" value="${reference.repo.status}"/>
        <filter token="REP_WEB" value="${reference.repo.website}"/>
        <filter token="REP_USER" value="${reference.repo.permissions.user}"/>
        <filter token="REP_PWD" value="${reference.repo.permissions.password}"/>
        <filter token="REP_GROUP" value="${reference.repo.permissions.group}"/>
        <filter token="REP_MODE" value="${reference.repo.permissions.mode}"/>
        <copy file="${templates.dir}/repo.xml" description="filter repo.xml from templates to demo xar"
              tofile="${reference.dir}/repo.xml"
              overwrite="true"
              filtering="true">
        </copy>
    </target>

</project>
